<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{69F244C3-75CD-396D-B3EB-930A8C5C80DD}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>Vc</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Vc.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Vc</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Vc.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Vc</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Vc.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Vc</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Vc.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Vc</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /d2SSAOptimizer- /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CallingConvention>VectorCall</CallingConvention>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4290;4800;4996;4244;4146;4227;4722;4748</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /d2SSAOptimizer- /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CallingConvention>VectorCall</CallingConvention>
      <DisableSpecificWarnings>4290;4800;4996;4244;4146;4227;4722;4748</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /d2SSAOptimizer- /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CallingConvention>VectorCall</CallingConvention>
      <DisableSpecificWarnings>4290;4800;4996;4244;4146;4227;4722;4748</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /d2SSAOptimizer- /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CallingConvention>VectorCall</CallingConvention>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4290;4800;4996;4244;4146;4227;4722;4748</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;Vc_COMPILE_LIB;Vc_HACK_OSTREAM_FOR_TTY;_CRT_SECURE_NO_WARNINGS;__SSE2__;__SSE3__;__SSSE3__;__SSE4_1__;__SSE4_2__;__SSE4A__;__AVX__;__FMA__;__BMI2__;__AVX2__;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\trigonometric_SSE2.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\trigonometric_SSE3.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\trigonometric_SSSE3.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSSE3.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSSE3.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\trigonometric_SSE4_1.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\trigonometric_AVX.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\trigonometric_AVX2+FMA+BMI2.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/trigonometric.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/trigonometric_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\trigonometric.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\sse_sorthelper_SSE2.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\sse_sorthelper_SSE4_1.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_SSE4_1.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE4_1.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\sse_sorthelper_AVX.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\sse_sorthelper_AVX2+FMA+BMI2.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/sse_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/sse_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\sse_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\avx_sorthelper_AVX.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\bca55c3204f6c909b661e86fd3fa8c58\avx_sorthelper_AVX2+FMA+BMI2.cpp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Copy to C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
C:\opt\cmake\bin\cmake.exe -E copy src/avx_sorthelper.cpp C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/avx_sorthelper_AVX2+FMA+BMI2.cpp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\avx_sorthelper.cpp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX2+FMA+BMI2.cpp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/dev/FractalRenderer/cinderbox/librapid/src/librapid/vendor/Vc/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-file C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/dev/FractalRenderer/cinderbox/librapid/src/librapid/vendor/Vc/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-file C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/dev/FractalRenderer/cinderbox/librapid/src/librapid/vendor/Vc/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-file C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/dev/FractalRenderer/cinderbox/librapid/src/librapid/vendor/Vc/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-file C:/dev/FractalRenderer/build/cinderbox/librapid/src/librapid/vendor/Vc/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\const.cpp" />
    <ClCompile Include="C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\cpuid.cpp" />
    <ClCompile Include="C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\src\support_x86.cpp" />
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE2.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE3.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE3</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE3</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE3</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE3</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSSE3.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSSE3</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSSE3</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSSE3</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSSE3</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_SSE4_1.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\trigonometric_AVX2+FMA+BMI2.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE2.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_SSE4_1.cpp">
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=SSE4_1</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\sse_sorthelper_AVX2+FMA+BMI2.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">AdvancedVectorExtensions</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Include="C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\avx_sorthelper_AVX2+FMA+BMI2.cpp">
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
      <EnableEnhancedInstructionSet Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">AdvancedVectorExtensions2</EnableEnhancedInstructionSet>
      <PreprocessorDefinitions Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(PreprocessorDefinitions);Vc_IMPL=AVX2+FMA+BMI2</PreprocessorDefinitions>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\dev\FractalRenderer\build\ZERO_CHECK.vcxproj">
      <Project>{2F6B46F4-0EFB-3074-AC75-615EFCB4A8B8}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>