<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{2F6B46F4-0EFB-3074-AC75-615EFCB4A8B8}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\dev\FractalRenderer\build\CMakeFiles\4d53e6ab4f6a8f31e461230f82488a22\generate.stamp.rule">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/dev/FractalRenderer/build/FractalRenderer.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\CMakeLists.txt;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCXXCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeRCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeSystem.cmake;C:\dev\FractalRenderer\cinderbox\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_source_files.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_target.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\modules\cinderConfig.buildtree.cmake.in;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\platform_msw.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\utilities.cmake;C:\dev\FractalRenderer\cinderbox\librapid\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\blas\openblas.dll;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\JoinPaths.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\cxx14.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\flags.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\sanitizers.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeLists.txt;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseArguments.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseImplicitLinkInfo.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckFunctionExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FetchContent.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindBLAS.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindOpenMP.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindThreads.cmake;C:\opt\cmake\share\cmake-3.23\Modules\GNUInstallDirs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckFlagCommonConfig.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;C:\opt\openblas\bin\openblas.dll;C:\opt\openblas\include\openblas\cblas.h;C:\opt\openblas\include\openblas\f77blas.h;C:\opt\openblas\include\openblas\lapack.h;C:\opt\openblas\include\openblas\lapacke.h;C:\opt\openblas\include\openblas\lapacke_config.h;C:\opt\openblas\include\openblas\lapacke_example_aux.h;C:\opt\openblas\include\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\lapacke_utils.h;C:\opt\openblas\include\openblas\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\openblas_config.h;C:\opt\openblas\lib\openblas.lib;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\dev\FractalRenderer\build\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\Cinder\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\fmt\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/dev/FractalRenderer/build/FractalRenderer.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\CMakeLists.txt;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCXXCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeRCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeSystem.cmake;C:\dev\FractalRenderer\cinderbox\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_source_files.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_target.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\modules\cinderConfig.buildtree.cmake.in;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\platform_msw.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\utilities.cmake;C:\dev\FractalRenderer\cinderbox\librapid\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\blas\openblas.dll;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\JoinPaths.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\cxx14.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\flags.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\sanitizers.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeLists.txt;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseArguments.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseImplicitLinkInfo.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckFunctionExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FetchContent.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindBLAS.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindOpenMP.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindThreads.cmake;C:\opt\cmake\share\cmake-3.23\Modules\GNUInstallDirs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckFlagCommonConfig.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;C:\opt\openblas\bin\openblas.dll;C:\opt\openblas\include\openblas\cblas.h;C:\opt\openblas\include\openblas\f77blas.h;C:\opt\openblas\include\openblas\lapack.h;C:\opt\openblas\include\openblas\lapacke.h;C:\opt\openblas\include\openblas\lapacke_config.h;C:\opt\openblas\include\openblas\lapacke_example_aux.h;C:\opt\openblas\include\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\lapacke_utils.h;C:\opt\openblas\include\openblas\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\openblas_config.h;C:\opt\openblas\lib\openblas.lib;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\dev\FractalRenderer\build\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\Cinder\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\fmt\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/dev/FractalRenderer/build/FractalRenderer.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\CMakeLists.txt;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCXXCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeRCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeSystem.cmake;C:\dev\FractalRenderer\cinderbox\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_source_files.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_target.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\modules\cinderConfig.buildtree.cmake.in;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\platform_msw.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\utilities.cmake;C:\dev\FractalRenderer\cinderbox\librapid\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\blas\openblas.dll;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\JoinPaths.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\cxx14.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\flags.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\sanitizers.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeLists.txt;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseArguments.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseImplicitLinkInfo.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckFunctionExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FetchContent.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindBLAS.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindOpenMP.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindThreads.cmake;C:\opt\cmake\share\cmake-3.23\Modules\GNUInstallDirs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckFlagCommonConfig.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;C:\opt\openblas\bin\openblas.dll;C:\opt\openblas\include\openblas\cblas.h;C:\opt\openblas\include\openblas\f77blas.h;C:\opt\openblas\include\openblas\lapack.h;C:\opt\openblas\include\openblas\lapacke.h;C:\opt\openblas\include\openblas\lapacke_config.h;C:\opt\openblas\include\openblas\lapacke_example_aux.h;C:\opt\openblas\include\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\lapacke_utils.h;C:\opt\openblas\include\openblas\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\openblas_config.h;C:\opt\openblas\lib\openblas.lib;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\dev\FractalRenderer\build\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\Cinder\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\fmt\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\opt\cmake\bin\cmake.exe -SC:/dev/FractalRenderer -BC:/dev/FractalRenderer/build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file C:/dev/FractalRenderer/build/FractalRenderer.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\CMakeLists.txt;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeCXXCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeRCCompiler.cmake;C:\dev\FractalRenderer\build\CMakeFiles\3.23.0-rc1\CMakeSystem.cmake;C:\dev\FractalRenderer\cinderbox\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_configure.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_source_files.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\libcinder_target.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\modules\cinderConfig.buildtree.cmake.in;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\platform_msw.cmake;C:\dev\FractalRenderer\cinderbox\Cinder\proj\cmake\utilities.cmake;C:\dev\FractalRenderer\cinderbox\librapid\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\blas\openblas.dll;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\CTestCustom.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\AddTargetProperty.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\CheckCXXCompilerFlag.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\OptimizeForArchitecture.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\UserWarning.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcConfig.cmake.in;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\Vc\cmake\VcMacros.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\JoinPaths.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\fmt\support\cmake\cxx14.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\flags.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\cmake\sanitizers.cmake;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeLists.txt;C:\dev\FractalRenderer\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeLists.txt;C:\opt\cmake\share\cmake-3.23\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCXXInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeCommonLanguageInclude.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeGenericSystem.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeInitializeConfigs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeLanguageInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakePackageConfigHelpers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseArguments.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeParseImplicitLinkInfo.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeRCInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInformation.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CMakeSystemSpecificInitialize.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTest.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CTestUseLaunchers.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckCXXSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckFunctionExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFile.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckIncludeFileCXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\CheckLibraryExists.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Compiler\MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FetchContent.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindBLAS.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindCUDAToolkit.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindOpenMP.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageHandleStandardArgs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindPackageMessage.cmake;C:\opt\cmake\share\cmake-3.23\Modules\FindThreads.cmake;C:\opt\cmake\share\cmake-3.23\Modules\GNUInstallDirs.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckCompilerFlag.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckFlagCommonConfig.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Internal\CheckSourceCompiles.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-C.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC-CXX.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows-MSVC.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\Windows.cmake;C:\opt\cmake\share\cmake-3.23\Modules\Platform\WindowsPaths.cmake;C:\opt\cmake\share\cmake-3.23\Modules\WriteBasicConfigVersionFile.cmake;C:\opt\openblas\bin\openblas.dll;C:\opt\openblas\include\openblas\cblas.h;C:\opt\openblas\include\openblas\f77blas.h;C:\opt\openblas\include\openblas\lapack.h;C:\opt\openblas\include\openblas\lapacke.h;C:\opt\openblas\include\openblas\lapacke_config.h;C:\opt\openblas\include\openblas\lapacke_example_aux.h;C:\opt\openblas\include\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\lapacke_utils.h;C:\opt\openblas\include\openblas\openblas\lapacke_mangling.h;C:\opt\openblas\include\openblas\openblas_config.h;C:\opt\openblas\lib\openblas.lib;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\dev\FractalRenderer\build\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\Cinder\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\fmt\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\src\deps\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\scnlib\test\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\Vc\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\CMakeFiles\generate.stamp;C:\dev\FractalRenderer\build\cinderbox\librapid\src\librapid\vendor\mpfr\mpir\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>